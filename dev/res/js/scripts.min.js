(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

/* eslint-disable compat/compat */
var url = 'https://private-9d5e37a-testassignment.apiary-mock.com/get-bears';
var list = document.querySelector('.item-wrapper');
var checkbox = document.querySelector('.checkbox');

function showReserveItem(listItem, className) {
  for (var i = 0; i < list.children.length; i += 1) {
    if (!listItem.children[i].className.includes(className)) {
      listItem.children[i].style.display = 'none';
    }
  }
}

function changeFilterValue(item, value) {
  item.dataset.filter = value;
}

function hideItem(item) {
  item.style.display = 'none';
}

function hideChildrenItem(items) {
  for (var i = 0; i < items.children.length; i += 1) {
    hideItem(items.children[i]);
  }
}

function showItem(item, styleValue) {
  item.style.display = styleValue;
}

function showFilterItem(items, filterStatus) {
  for (var i = 0; i < items.children.length; i += 1) {
    if (items.children[i].getAttribute('data-filter') === filterStatus) {
      showItem(items.children[i], 'flex');
    }
  }
}

function showAllItem(listItem) {
  for (var i = 0; i < listItem.children.length; i += 1) {
    listItem.children[i].style.display = 'flex';
  }
}

function postData(item, button, link, filterValue) {
  fetch(link, {
    method: 'POST'
  }).then(function (res) {
    if (res.status === 200) {
      hideItem(item);
      hideItem(button.parentNode);
      changeFilterValue(item, filterValue);
    }
  });
}

function getData(urlLink) {
  return fetch(urlLink).then(function (response) {
    return response.json();
  });
}

function createReserveItem(data, element, index) {
  element.innerHTML += "\n        <div data-filter=\"all\" id=\"".concat(data[index].id, "\" class=\"item item--reserve\">\n        <div class=\"item__img\"><img src=\"").concat(data[index].image_url, "\" alt=\"\"></div>\n        <div class=\"item__title-reserve\">\u0412 \u0437\u0430\u043F\u043E\u0432\u0435\u0434\u043D\u0438\u043A\u0435</div>\n        <div class=\"item__info\">\n            <div class=\"item__title\">").concat(data[index].name, "</div>\n            <div class=\"item__type\">").concat(data[index].type, "</div>\n            <div class=\"item__gender\">").concat(data[index].gender, "</div>\n        </div>\n        <button id=\"accept\" class=\"btn btn-accept\">\u041F\u0440\u0438\u043D\u044F\u0442\u044C</button>\n        <button id=\"reject\" class=\"btn btn-reject\">\u041E\u0442\u043A\u043B\u043E\u043D\u0438\u0442\u044C</button>\n</div>");
}

function createSimpleItem(data, element, index) {
  element.innerHTML += "\n        <div data-filter=\"all\" id=\"".concat(data[index].id, "\" class=\"item\">\n        <div class=\"item__img\"><img src=\"").concat(data[index].image_url, "\" alt=\"\"></div>\n        <div class=\"item__info\">\n            <div class=\"item__title\">").concat(data[index].name, "</div>\n            <div class=\"item__type\">").concat(data[index].type, "</div>\n            <div class=\"item__gender\">").concat(data[index].gender, "</div>\n        </div>\n        <button id=\"accept\" class=\"btn btn-accept\">\u041F\u0440\u0438\u043D\u044F\u0442\u044C</button>\n        <button id=\"reject\" class=\"btn btn-reject\">\u041E\u0442\u043A\u043B\u043E\u043D\u0438\u0442\u044C</button>\n    </div>");
}

function createData(data) {
  for (var i = 0; i < data.length; i += 1) {
    if (data[i].in_reserve) {
      createReserveItem(data, list, i);
    } else {
      createSimpleItem(data, list, i);
    }
  }
}

checkbox.addEventListener('change', function () {
  if (checkbox.checked) {
    showReserveItem(list, 'reserve');
  } else {
    showAllItem(list);
  }
});
document.addEventListener('click', function (event) {
  if (event.target.matches('.select-box__list label')) {
    var status = event.target.getAttribute('data-filter');

    if (status === 'accept') {
      hideChildrenItem(list);
      showFilterItem(list, 'accept');
    } else if (status === 'reject') {
      hideChildrenItem(list);
      showFilterItem(list, 'reject');
    } else if (status === 'all') {
      hideChildrenItem(list);
      showFilterItem(list, 'all');
    }
  }
});
document.addEventListener('click', function (event) {
  if (event.target.matches('button')) {
    var button = event.target;
    var itemId = button.parentNode.id;
    var item = button.parentNode;
    var acceptLink = "https://private-9d5e37a-testassignment.apiary-mock.com/resolve-bear?id=".concat(itemId);
    var rejectLink = "https://private-9d5e37a-testassignment.apiary-mock.com/reject-bear?id=".concat(itemId);

    if (button.id === 'accept') {
      postData(item, button, acceptLink, 'accept');
    } else if (button.id === 'reject') {
      postData(item, button, rejectLink, 'reject');
    }
  }
});
getData(url).then(function (data) {
  return createData(data.results.data);
}).catch(function (err) {
  throw err;
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
